---
import { BLOCKS } from '@contentful/rich-text-types';
import { contentfulClient } from "../../lib/contentful";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import type { BlogPost } from "../../lib/contentful";
import Footer from '../../components/Footer.astro';
import Navbar from '../../components/Navbar.astro';


export async function getStaticPaths() {
  const entries = await contentfulClient.getEntries<BlogPost>({
    content_type: "blogPost",
  });

  function renderImage(node){
    let data = node.data.target.fields
    return `<img src="${data.file.url}?&w=1100" alt="${data.description}"><figcaption>${data.description}</figcaption>`

  }

  const options = {
    renderNode: {
      [BLOCKS.EMBEDDED_ASSET]: (node) => `<figure>${renderImage(node)}</figure>`
    }
  }

  const pages = entries.items.map((item) => ({
    params: { slug: item.fields.slug },
    props: {
      title: item.fields.title,
      content: documentToHtmlString(item.fields.content, options),
      date: new Date(item.fields.date).toLocaleDateString(),
      type: item.fields.type,
      imageUrl: item.fields.image.fields.file.url,
	    imageDesc: item.fields.image.fields.description
    },
  }));

  return pages;
}


const { content, title, date, type, imageUrl, imageDesc} = Astro.props;
const cssURL = `url(/${imageUrl}?w=1100)`;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.png" />
		<meta name="generator" content={Astro.generator} />
		<title>Terrasearch Geophysical</title>
	</head>
	<body>
		<Navbar curPage="home"></Navbar>
		<main>
      <div class="post">
        <div class="post--title">
          <h1>{title}</h1>
        </div>
        <article class="content" set:html={content} />
      </div> 
    </main>
		<Footer></Footer>
	</body>
</html>

<style define:vars={{cssURL}}>
  body {
    margin:0;
  }
	main {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: left;
		padding: 0px 0px 32px 0px;
		width: 100%;
    background-color: #FBFBF8;
	}
  .post{
    max-width: 1100px;
    width: 100%;
  }

  .post--title{
    width:100%;
    padding-top: 40%;
    position:relative;
    background-image: linear-gradient(rgba(0,0,0,.5), rgba(0,0,0,.5)), var(--cssURL); 
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    margin-bottom: 48px;
   }

   h1{
    position: absolute;
    bottom: 10%;
    color:#fff;
    padding:8px 24px;
    background-color: rgba(40, 66, 31, 0.9);
    border-right: 4px solid rgba(254, 127, 45, 1);
    font-size: 1.8rem;
    font-family: 'Montserrat', sans-serif;
   }

  .post > .content {
    font-weight: 400;
    font-size: 20px;
    color:rgb(41,41,41);
    letter-spacing: -.003em;
    line-height: 32px;
    text-align: left;
    display: flex;
    flex-direction: column;
    align-items: start;
  }

  .post > .content :global( > *:not(figure)){
    font-family: "Montserrat",sans-serif;
  }

  .post > .content :global(p){
    font-size:20px;
    color:rgb(41,41,41);
    letter-spacing: 1px;
    line-height: 32px;
    font-family: 'Montserrat', sans-serif;
  }

  .post > .content :global(figure){
    background:#fff;
    width: fit-content;
    align-self: center;
    padding:16px 32px;
    border:1px solid grey;
    border-radius: 6px;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: left;
  }

  .post > .content :global(figure > img){
    background-color:grey;
    max-width: 100%;
    max-height: 40vh;
  }

  .post > .content :global(figure > figcaption){
    font-size: 16px;
    font-style: italic;
    line-height: 1.2rem;
    margin-top:16px;
  }

  @media screen and (max-width: 1099px) {

    main {
      padding: 0 16px 32px 16px;
    }

    .post--title{
      padding-top:75%;
      margin-bottom:24px;
    }
  }


</style>